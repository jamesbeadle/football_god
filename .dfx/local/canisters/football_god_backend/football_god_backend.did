type ViewPredictionDTO = record {
  correctScores : nat8;
  fixtures : vec FixtureDTO;
  playerName : text;
  seasonName : text;
  totalFixtures : nat8;
};
type UserBalanceDTO = record {
  balance : nat64;
  displayName : text;
  principalName : text;
};
type TournamentStage = variant {
  Final;
  GroupA;
  GroupB;
  GroupC;
  GroupD;
  GroupE;
  GroupF;
  QuarterFinal;
  RoundOf16;
  SemiFinal;
};
type TeamId = nat16;
type Team = record {
  id : nat16;
  name : text;
};
type SubmitPlayDTO = record {
  enterSweepstake : bool;
  fixtures : vec FixtureDTO;
};
type SeasonDTO = record {
  gameweeks : vec GameweekDTO;
  seasonId : nat16;
  seasonName : text;
  seasonYear : nat16;
};
type Season = record {
  gameweeks : List;
  id : nat16;
  name : text;
  year : nat16;
};
type Result_3 = variant {
  err : Error;
  ok : Euro2024PredictionDTO;
};
type Result_2 = variant {
  err : Error;
  ok : vec InternationalPlayer;
};
type Result_1 = variant {
  err : Error;
  ok : vec InternationalTeam;
};
type Result = variant {
  err : Error;
  ok;
};
type ProfileDTO = record {
  depositAddress : blob;
  displayName : text;
  principalName : text;
  walletAddress : text;
};
type PredictionSet = record {
  goalAssister : PlayerId;
  goalScorer : PlayerId;
  loser : TeamId;
  redCard : PlayerId;
  stage : TournamentStage;
  winner : TeamId;
  yellowCard : PlayerId;
};
type Position = variant {
  Defender;
  Foward;
  Goalkeeper;
  Midfielder;
};
type PlayerId = nat16;
type PlayDTO = record {
  activeGameweekNumber : nat8;
  activeSeasonId : nat16;
  activeSeasonName : text;
  fixtures : vec FixtureDTO;
  sweepstakePaid : bool;
  userId : text;
};
type PayoutDTO = record {
  activeGameweekNumber : nat8;
  activeSeasonName : text;
  adminFee : nat64;
  gameweekPot : nat64;
  potAccountBalance : nat64;
  winnerCount : nat64;
  winnerShare : nat64;
};
type List_1 = opt record {
  Fixture;
  List_1;
};
type List = opt record {
  Gameweek;
  List;
};
type LeaderboardEntryDTO = record {
  correctScores : nat8;
  displayName : text;
  enteredSweepstake : bool;
  position : text;
  principalName : text;
  totalFixtures : nat8;
};
type LeaderBoardDTO = record {
  activeGameweekNumber : nat8;
  activeSeasonId : nat16;
  activeSeasonName : text;
  leaderboardEntries : vec LeaderboardEntryDTO;
  seasons : vec SeasonDTO;
  status : nat8;
  totalEntries : nat64;
  totalPot : nat64;
  winningShare : nat64;
};
type InternationalTeam = record {
  countryCode : text;
  countryName : text;
  id : TeamId;
  players : vec InternationalPlayer;
  shirtColour : text;
};
type InternationalPlayer = record {
  dateOfBirth : int;
  firstName : text;
  id : PlayerId;
  lastName : text;
  nationality : CountryId;
  nickname : text;
  position : Position;
  qualifyingAppearances : nat8;
  qualifyingAssists : nat8;
  qualifyingGoals : nat8;
  shirtNumber : nat8;
  teamId : TeamId;
};
type HomeDTO = record {
  activeGameweekNumber : nat8;
  activeSeasonId : nat16;
  activeSeasonName : text;
  fixtures : vec FixtureDTO;
  gameweekStatus : nat8;
  hasPredictions : bool;
  principalName : text;
  systemUpdating : bool;
};
type HistoryDTO = record {
  activeSeasonId : nat16;
  activeSeasonName : text;
  seasonGameweeks : vec GameweekDTO;
  seasons : vec SeasonDTO;
  userId : text;
};
type GameweekPotDTO = record { gameweekPot : nat64 };
type GameweekDTO = record {
  correctScores : nat8;
  gameweekNumber : nat8;
  sweepstakeEntered : bool;
  totalFixtures : nat8;
  winnings : nat64;
};
type Gameweek = record {
  fixtureCount : nat8;
  fixtures : List_1;
  number : nat8;
  status : nat8;
  totalPot : nat64;
  winningShare : nat64;
};
type FixtureDTO = record {
  awayTeamGoals : nat8;
  awayTeamId : nat16;
  awayTeamName : text;
  awayTeamPrediction : nat8;
  correct : bool;
  fixtureId : nat32;
  homeTeamGoals : nat8;
  homeTeamId : nat16;
  homeTeamName : text;
  homeTeamPrediction : nat8;
  status : nat8;
};
type Fixture = record {
  awayGoals : nat8;
  awayTeamId : nat16;
  homeGoals : nat8;
  homeTeamId : nat16;
  id : nat32;
  status : nat8;
};
type Euro2024PredictionDTO = record {
  fPrediction : PredictionSet;
  groupAPrediction : PredictionSet;
  groupBPrediction : PredictionSet;
  groupCPrediction : PredictionSet;
  groupDPrediction : PredictionSet;
  groupEPrediction : PredictionSet;
  groupFPrediction : PredictionSet;
  qfPrediction : PredictionSet;
  r16Prediction : PredictionSet;
  sfPrediction : PredictionSet;
};
type Error = variant {
  AlreadyExists;
  DecodeError;
  NotAllowed;
  NotAuthorized;
  NotFound;
};
type CountryId = nat8;
type CorrectPredictionsDTO = record {
  awayTeamGoals : nat8;
  awayTeamName : text;
  gameweekNumber : nat8;
  homeTeamGoals : nat8;
  homeTeamName : text;
  predictions : vec CorrectPredictionDTO;
  seasonId : nat16;
  seasonName : text;
  totalEntries : nat64;
};
type CorrectPredictionDTO = record {
  displayName : text;
  principalName : text;
};
type BalancesDTO = record {
  potAccountBalance : nat64;
  totalEntries : nat64;
  userBalances : vec UserBalanceDTO;
};
type AdminDTO = record {
  activeGameweekNumber : nat8;
  activeGameweekStatus : text;
  activeSeasonId : nat16;
  activeSeasonName : text;
  seasons : vec SeasonDTO;
};
type AccountBalanceDTO = record { accountBalance : nat64 };
service : {
  addFixtureToGameweek : (nat16, nat8, nat16, nat16) -> (Result);
  createSeason : (text, nat16) -> (Result);
  createTeam : (text) -> (Result);
  deleteFixture : (nat16, nat8, nat32) -> (Result);
  deleteSeason : (nat16) -> (Result);
  deleteTeam : (nat16) -> (Result);
  getAccountBalanceDTO : () -> (AccountBalanceDTO);
  getAdminDTO : () -> (AdminDTO) query;
  getCorrectPredictionsDTO : (nat16, nat8, nat32, nat, nat) -> (CorrectPredictionsDTO);
  getEuro2024DTO : () -> (Result_3) query;
  getEuro2024Players : () -> (Result_2) query;
  getEuro2024Teams : () -> (Result_1) query;
  getFixture : (nat16, nat8, nat32) -> (opt Fixture) query;
  getFixtures : (nat16, nat8) -> (vec Fixture) query;
  getGameweekPotDTO : () -> (GameweekPotDTO);
  getGameweeks : (nat16) -> (vec Gameweek) query;
  getHistoryDTO : (nat16) -> (HistoryDTO) query;
  getHomeDTO : () -> (HomeDTO) query;
  getLeaderboardDTO : (nat16, nat8, nat, nat) -> (LeaderBoardDTO) query;
  getPayoutDTO : () -> (PayoutDTO);
  getPlayDTO : () -> (PlayDTO) query;
  getProfileDTO : () -> (ProfileDTO);
  getSeason : (nat16) -> (opt Season) query;
  getSeasons : () -> (vec Season) query;
  getTeams : () -> (vec Team) query;
  getUserBalancesDTO : (nat, nat) -> (BalancesDTO);
  getViewPredictionDTO : (text, nat16, nat8) -> (ViewPredictionDTO) query;
  isAdmin : () -> (bool) query;
  isDisplayNameValid : (text) -> (bool) query;
  isWalletValid : (text) -> (bool) query;
  payAndSubmitEuro2024Prediction : (Euro2024PredictionDTO) -> (Result);
  payoutSweepstake : () -> (Result);
  setSystemState : (nat16, nat8) -> (Result);
  submitEuro2024Prediction : (Euro2024PredictionDTO) -> (Result);
  submitPlayDTO : (SubmitPlayDTO) -> (Result);
  unsetActiveState : () -> (Result);
  updateDisplayName : (text) -> (Result);
  updateFixture : (nat16, nat8, nat32, nat16, nat16, nat8, nat8, nat8) -> (Result);
  updateGameweekStatus : (nat16, nat8, nat8) -> (Result);
  updateSeason : (nat16, text, nat16) -> (Result);
  updateTeam : (nat16, text) -> (Result);
  updateWalletAddress : (text) -> (Result);
  withdrawICP : (float64) -> (Result);
};
